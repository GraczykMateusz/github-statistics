version: '3.8'
services:
  database:
    image: debezium/postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_local
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "wal_level=logical" ]
    restart: always
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9.2
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
  kafka:
    image: docker.io/bitnami/kafka:3.3.2
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    restart: always
  connect:
    image: debezium/connect:2.6.2.Final
    ports:
      - "8083:8083"
    links:
      - kafka
      - database
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=debezium-events
      - CONFIG_STORAGE_TOPIC=debezium_configs
      - OFFSET_STORAGE_TOPIC=debezium_offsets
      - STATUS_STORAGE_TOPIC=debezium_statuses
    restart: always
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_SCHEMA_REGISTRY=http://localhost:8081
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "9000:8080"
    depends_on:
      - kafka
    restart: always
  debezium-ui:
    image: debezium/debezium-ui:2.5
    platform: linux/amd64
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083
    ports:
      - "9091:8080"
    depends_on:
      - connect
    restart: always

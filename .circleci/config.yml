version: 2.1

executors:
  default-executor:
    docker:
      - image: cimg/openjdk:21.0-browsers

jobs:
  build-frontend:
    executor: default-executor
    working_directory: ~/github-statistics/frontend
    steps:
      - checkout:
          path: ~/github-statistics
      - restore_cache:
          keys:
            - frontend-{{ checksum "package-lock.json" }}
      - run:
          name: Install deps
          command: npm ci
#      - run:
#          name: Ng Lint
#          command: npm run lint
      - save_cache:
          paths:
            - ~/github-statistics/frontend/node_modules
          key: frontend-{{ checksum "package-lock.json" }}
      - run:
          name: Build
          command: mvn install
      - persist_to_workspace:
          root: ~/github-statistics
          paths:
            - frontend/target/*.jar
  build-backend:
    executor: default-executor
    working_directory: ~/github-statistics/backend
    steps:
      - checkout:
          path: ~/github-statistics
      - restore_cache:
          keys:
            - backend-{{ checksum "pom.xml" }}
#      - run:
#          name: Spotless check
#          command: mvn spotless:check
      - run:
          name: Build
          command: mvn install
      - save_cache:
          paths:
            - ~/.m2
          key: backend-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: ~/github-statistics
          paths:
            - backend/target/*.jar
  delivery:
    executor: default-executor
    working_directory: ~/github-statistics/delivery
    steps:
      - checkout:
          path: ~/github-statistics
      - attach_workspace:
          at: ~/github-statistics
      - run:
          name: Install frontend JAR to local Maven repository
          command: |
            cd ~/github-statistics
            mvn install:install-file \
              -Dfile=frontend/target/frontend-1.0-SNAPSHOT.jar \
              -DgroupId=dev.graczykmateusz \
              -DartifactId=frontend \
              -Dversion=1.0-SNAPSHOT \
              -Dpackaging=jar \
              -DgeneratePom=true
      - run:
          name: Install backend JAR to local Maven repository
          command: |
            cd ~/github-statistics
            mvn install:install-file \
              -Dfile=backend/target/backend-1.0-SNAPSHOT.jar \
              -DgroupId=dev.graczykmateusz \
              -DartifactId=backend \
              -Dversion=1.0-SNAPSHOT \
              -Dpackaging=jar \
              -DgeneratePom=true
      - run:
          name: Build
          command: mvn package
      - persist_to_workspace:
          root: ~/github-statistics
          paths:
            - delivery/target/*.jar
  e2e:
    executor: default-executor
    working_directory: ~/github-statistics/e2e
    steps:
      - checkout:
          path: ~/github-statistics
      - attach_workspace:
          at: ~/github-statistics
      - run:
          name: Install delivery JAR to local Maven repository
          command: |
            cd ~/github-statistics
            mvn install:install-file \
              -Dfile=delivery/target/delivery-1.0-SNAPSHOT.jar \
              -DgroupId=dev.graczykmateusz \
              -DartifactId=delivery \
              -Dversion=1.0-SNAPSHOT \
              -Dpackaging=jar \
              -DgeneratePom=true
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            cd ~/github-statistics
            docker build -t github-statistics-app:latest .
      - run:
          name: Verify Docker Image
          command: docker run --name github-statistics-app --rm -p 8081:8081 -e SPRING_PROFILES_ACTIVE=e2e github-statistics-app:latest
      - run:
          name: Test
          command: mvn verify

workflows:
  main:
    jobs:
      - build-frontend:
          filters:
            branches:
              only: master
      - build-backend:
          filters:
            branches:
              only: master
      - delivery:
          requires:
            - build-frontend
            - build-backend
          filters:
            branches:
              only: master
      - e2e:
          requires:
            - delivery
          filters:
            branches:
              only: master